Index: messenger-ui/src/components/authForm/login/Login.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/authForm/login/Login.js b/messenger-ui/src/components/authForm/login/Login.js
--- a/messenger-ui/src/components/authForm/login/Login.js	
+++ b/messenger-ui/src/components/authForm/login/Login.js	(date 1738835040174)
@@ -60,4 +60,4 @@
     );
 };
 
-export default Login;
+export default Login;
\ No newline at end of file
Index: messenger-ui/src/components/authForm/registration/Registration.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/authForm/registration/Registration.js b/messenger-ui/src/components/authForm/registration/Registration.js
--- a/messenger-ui/src/components/authForm/registration/Registration.js	
+++ b/messenger-ui/src/components/authForm/registration/Registration.js	(date 1738835051976)
@@ -62,4 +62,4 @@
     );
 };
 
-export default Registration;
+export default Registration;
\ No newline at end of file
Index: messenger-ui/src/components/authForm/AuthContext.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/authForm/AuthContext.js b/messenger-ui/src/components/authForm/AuthContext.js
--- a/messenger-ui/src/components/authForm/AuthContext.js	
+++ b/messenger-ui/src/components/authForm/AuthContext.js	(date 1738841340753)
@@ -5,8 +5,18 @@
 class AuthProvider extends Component {
     constructor(props) {
         super(props);
+
+        let storedUser = null;
+        try {
+            const userData = localStorage.getItem("user");
+            storedUser = userData ? JSON.parse(userData) : null;
+        } catch (error) {
+            console.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ localStorage:", error);
+            localStorage.clear(); // –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
+        }
+
         this.state = {
-            user: null,
+            user: storedUser,
             loading: true,
         };
     }
@@ -17,17 +27,19 @@
             credentials: "include",
         })
             .then(response => {
-                if (!response.ok) {
-                    throw new Error("Unauthorized");
-                }
-                return response.json();
+                if (response.status === 200) {
+                    return response.json();
+                } else {
+                    throw new Error("Unauthorized");
+                }
+            })
+            .then(userData => {
             })
             .catch(() => {
+                // ‚ùå –ï—Å–ª–∏ –Ω–µ—Ç –∫—É–∫–æ–≤ (–æ—à–∏–±–∫–∞ 401), —É–¥–∞–ª—è–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ
                 this.setState({ user: null, loading: false });
-                localStorage.removeItem("user");
-                localStorage.removeItem("avatarUrl");
-                localStorage.removeItem("email");
-                localStorage.removeItem("userId");
+
+                localStorage.clear(); // –£–¥–∞–ª—è–µ–º –≤—Å—ë
             });
     }
 
Index: messenger-ui/src/components/mainLayout/sidebar/—ÅhatList/ChatList.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/mainLayout/sidebar/—ÅhatList/ChatList.js b/messenger-ui/src/components/mainLayout/sidebar/—ÅhatList/ChatList.js
--- a/messenger-ui/src/components/mainLayout/sidebar/—ÅhatList/ChatList.js	
+++ b/messenger-ui/src/components/mainLayout/sidebar/—ÅhatList/ChatList.js	(date 1738841746355)
@@ -28,7 +28,11 @@
                                 className={chat.id === activeChatId ? "active" : ""}
                                 onClick={() => {
                                     console.log(`üìå –í—ã–±—Ä–∞–Ω —á–∞—Ç: ${chat.id}`);
-                                    onSelectChat(chat.id);
+                                    onSelectChat({
+                                        id: chat.id,
+                                        name: chat.name,
+                                        description: chat.description,
+                                    });
                                 }}
                             >
                                 <div className="chat-item">
Index: messenger-ui/src/components/mainLayout/sidebar/Sidebar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/mainLayout/sidebar/Sidebar.js b/messenger-ui/src/components/mainLayout/sidebar/Sidebar.js
--- a/messenger-ui/src/components/mainLayout/sidebar/Sidebar.js	
+++ b/messenger-ui/src/components/mainLayout/sidebar/Sidebar.js	(date 1738841465904)
@@ -15,7 +15,7 @@
     const [loading, setLoading] = useState(false);
     const [error, setError] = useState(null);
     const [isPersonal, setIsPersonal] = useState(true);
-    const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem("user")); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
+    const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem("user"));
 
     useEffect(() => {
         const storedUser = localStorage.getItem("user");
@@ -28,7 +28,7 @@
             setIsProfileOpen(false);
             setIsLoggedIn(false);
         } else {
-            fetchGroupChats(); // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã –ø—Ä–∏ –≤—Ö–æ–¥–µ
+            fetchGroupChats();
         }
     }, []);
 
@@ -42,10 +42,7 @@
         })
             .then(response => response.json())
             .then(data => {
-                // ‚úÖ –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
                 const uniqueChats = [...new Map(data.map(chat => [chat.id, chat])).values()];
-
-                // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º "Main Room" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
                 const updatedChats = uniqueChats.some(chat => chat.id === 1)
                     ? uniqueChats
                     : [{ id: 1, name: "Main Room", description: "–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞" }, ...uniqueChats];
@@ -76,12 +73,11 @@
         })
             .then(response => response.json())
             .then(createdRoom => {
-                setGroupChats(prev => [...prev, createdRoom]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —á–∞—Ç –≤ —Å–ø–∏—Å–æ–∫
+                setGroupChats(prev => [...prev, createdRoom]);
             })
             .catch(error => alert(`–û—à–∏–±–∫–∞: ${error.message}`));
     };
 
-    // üîπ –õ–æ–≥–∞—É—Ç: –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–æ–≤, —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ä–µ–Ω–¥–µ—Ä Main Room
     const handleLogout = async () => {
         try {
             await fetch("http://localhost:8080/api/auth/logout", {
@@ -92,35 +88,27 @@
             console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:", error);
         }
 
-        // ‚ùó –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
         localStorage.removeItem("user");
         localStorage.removeItem("userId");
         localStorage.removeItem("avatarUrl");
         setIsProfileOpen(false);
         setIsLoggedIn(false);
-
-        // ‚ùó –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
         setPersonalChats([]);
         setGroupChats([{ id: 1, name: "Main Room", description: "–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞" }]);
-
-        // ‚ùó –û–±–Ω–æ–≤–ª—è–µ–º UI
         setIsGroupsLoaded(false);
-
-        // ‚ùó –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–Ω–¥–µ—Ä–∏–º Main Room (ID 1)
         onSelectChat(1);
     };
 
-    // üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–≤—Ö–æ–¥)
     const handleLogin = (userData) => {
         localStorage.setItem("user", userData.username);
         localStorage.setItem("userId", userData.id);
-        localStorage.setItem("email", userData.email || "");
+        localStorage.setItem("email", userData.email );
         localStorage.setItem("avatarUrl", userData.avatarUrl || "/default-avatar.webp");
 
         setIsLoggedIn(true);
-        setIsProfileOpen(false); // ‚ùó –ü—Ä–æ—Ñ–∏–ª—å –ù–ï –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
-        setFormType(null); // ‚ùó –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ª–æ–≥–∏–Ω–∞
-        fetchGroupChats(); // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
+        setIsProfileOpen(false);
+        setFormType(null);
+        fetchGroupChats();
     };
 
     return (
@@ -143,7 +131,7 @@
                         setIsPersonal(value);
                         if (!value) fetchGroupChats();
                     }}
-                    onAddGroupChat={handleAddGroupChat} // ‚ùó –ö–Ω–æ–ø–∫–∞ "+" —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
+                    onAddGroupChat={handleAddGroupChat}
                 />
 
                 {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
@@ -152,7 +140,7 @@
 
             {isProfileOpen && localStorage.getItem("user") && (
                 <UserProfile
-                    onLogout={handleLogout} // –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–≥–∞—É—Ç
+                    onLogout={handleLogout}
                     onClose={() => setIsProfileOpen(false)}
                     username={localStorage.getItem("user")}
                 />
Index: messenger-ui/src/components/mainLayout/sidebar/userProfile/UserProfile.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/mainLayout/sidebar/userProfile/UserProfile.js b/messenger-ui/src/components/mainLayout/sidebar/userProfile/UserProfile.js
--- a/messenger-ui/src/components/mainLayout/sidebar/userProfile/UserProfile.js	
+++ b/messenger-ui/src/components/mainLayout/sidebar/userProfile/UserProfile.js	(date 1738835671020)
@@ -51,4 +51,4 @@
     );
 };
 
-export default UserProfile;
+export default UserProfile;
\ No newline at end of file
Index: messenger-ui/src/components/mainLayout/chatContainer/ChatContainer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/mainLayout/chatContainer/ChatContainer.js b/messenger-ui/src/components/mainLayout/chatContainer/ChatContainer.js
--- a/messenger-ui/src/components/mainLayout/chatContainer/ChatContainer.js	
+++ b/messenger-ui/src/components/mainLayout/chatContainer/ChatContainer.js	(date 1738842390573)
@@ -10,162 +10,169 @@
     const [isUsersModalOpen, setIsUsersModalOpen] = useState(false);
     const [selectedMessage, setSelectedMessage] = useState(null);
     const [editedMessage, setEditedMessage] = useState("");
+    const [selectedMessageId, setSelectedMessageId] = useState(null); // –•—Ä–∞–Ω–∏–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 
     const fetchMessages = useCallback(() => {
         if (!activeChatId) return;
 
-        fetch(`http://localhost:8080/api/messages/${activeChatId}`, {
-            method: "GET",
+        fetch(http://localhost:8080/api/messages/${activeChatId}, {
+        method: "GET",
             credentials: "include",
-        })
-            .then(response => response.json())
-            .then(data => {
-                console.log("üì© –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", data);
-                setMessages(data);
-            })
-            .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:", error));
-    }, [activeChatId]);
+    })
+        .then(response => response.json())
+        .then(data => {
+            console.log("üì© –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", data);
+            setMessages(data);
+        })
+        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:", error));
+}, [activeChatId]);
 
-    useEffect(() => {
-        setMessages([]);
-        fetchMessages();
-    }, [fetchMessages]);
+useEffect(() => {
+    setMessages([]);
+    fetchMessages();
+}, [fetchMessages]);
 
-    const sendMessage = () => {
-        if (!newMessage.trim()) return;
+const sendMessage = () => {
+    if (!newMessage.trim()) return;
 
-        const userId = localStorage.getItem("userId");
-        if (!userId) {
-            console.error("‚ùå –û—à–∏–±–∫–∞: userId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage");
-            return;
-        }
+    const userId = localStorage.getItem("userId");
+    if (!userId) {
+        console.error("‚ùå –û—à–∏–±–∫–∞: userId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage");
+        return;
+    }
 
-        const messageData = {
-            content: newMessage,
-            roomId: activeChatId,
-            userId: parseInt(userId, 10),
-            timestamp: new Date().toISOString(),
-        };
+    const messageData = {
+        content: newMessage,
+        roomId: activeChatId,
+        userId: parseInt(userId, 10),
+        timestamp: new Date().toISOString(),
+    };
 
-        fetch("http://localhost:8080/api/messages/write", {
-            method: "POST",
-            headers: { "Content-Type": "application/json" },
-            credentials: "include",
-            body: JSON.stringify(messageData),
-        })
-            .then(response => response.text())
-            .then(data => {
-                console.log("üì© –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è:", data);
-                setNewMessage("");
-                fetchMessages();
-            })
-            .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error));
-    };
+    fetch("http://localhost:8080/api/messages/write", {
+        method: "POST",
+        headers: { "Content-Type": "application/json" },
+        credentials: "include",
+        body: JSON.stringify(messageData),
+    })
+        .then(response => response.text())
+        .then(data => {
+            console.log("üì© –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è:", data);
+            setNewMessage("");
+            fetchMessages();
+        })
+        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error));
+};
 
-    const deleteMessage = () => {
-        if (!selectedMessage || !selectedMessage.id) {
-            console.error("‚ùå –û—à–∏–±–∫–∞: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
-            return;
-        }
+const deleteMessage = () => {
+    if (!selectedMessageId) {
+        console.error("‚ùå –û—à–∏–±–∫–∞: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
+        return;
+    }
 
-        fetch(`http://localhost:8080/api/messages/delete/${selectedMessage.id}`, {
-            method: "DELETE",
-            credentials: "include",
-        })
-            .then(response => {
-                if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
-                return response.text();
-            })
-            .then(() => {
-                console.log("üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:", selectedMessage.id);
-                setSelectedMessage(null);
-                fetchMessages();
-            })
-            .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:", error));
-    };
+    fetch(http://localhost:8080/api/messages/delete/${selectedMessageId}, {
+    method: "DELETE",
+        credentials: "include",
+})
+.then(response => {
+    if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
+    return response.text();
+})
+    .then(() => {
+        console.log("üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:", selectedMessageId);
+        setSelectedMessage(null);
+        setSelectedMessageId(null);
+        fetchMessages();
+    })
+    .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:", error));
+};
 
-    const editMessage = () => {
-        if (!selectedMessage || !selectedMessage.id) {
-            console.error("‚ùå –û—à–∏–±–∫–∞: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
-            return;
-        }
+const editMessage = () => {
+    if (!selectedMessageId) {
+        console.error("‚ùå –û—à–∏–±–∫–∞: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
+        return;
+    }
 
-        if (!editedMessage.trim()) return;
+    if (!editedMessage.trim()) return;
 
-        const updatedMessageData = {
-            content: editedMessage
-        };
+    const updatedMessageData = {
+        content: editedMessage
+    };
 
-        fetch(`http://localhost:8080/api/messages/edit/${selectedMessage.id}`, {
-            method: "PUT",
-            headers: { "Content-Type": "application/json" },
-            credentials: "include",
-            body: JSON.stringify(updatedMessageData),
-        })
-            .then(response => {
-                if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
-                return response.json();
-            })
-            .then(() => {
-                console.log("‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:", selectedMessage.id);
-                setSelectedMessage(null);
-                fetchMessages();
-            })
-            .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:", error));
-    };
+    fetch(http://localhost:8080/api/messages/edit/${selectedMessageId}, {
+    method: "PUT",
+        headers: { "Content-Type": "application/json" },
+    credentials: "include",
+        body: JSON.stringify(updatedMessageData),
+})
+.then(response => {
+    if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
+    return response.json();
+})
+    .then(() => {
+        console.log("‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:", selectedMessageId);
+        setSelectedMessage(null);
+        setSelectedMessageId(null);
+        fetchMessages();
+    })
+    .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:", error));
+};
 
-    return (
-        <div className="chat-container">
-            <div className="chat-header">
-                <span className="chat-title">{chatInfo?.name || `–ß–∞—Ç ${activeChatId}`}</span>
-                <button className="chat-info-btn" onClick={() => setIsModalOpen(true)}>‚ÑπÔ∏è</button>
-            </div>
+return (
+    <div className="chat-container">
+        <div className="chat-header">
+            <span className="chat-title">{chatInfo?.name || –ß–∞—Ç ${activeChatId}}</span>
+            <button className="chat-info-btn" onClick={() => setIsModalOpen(true)}>‚ÑπÔ∏è</button>
+        </div>
 
-            <div className="chat-messages">
-                {messages.map((message, index) => (
-                    <Message
-                        key={message.id || `msg-${index}`}
-                        content={message.content}
-                        sender={{
-                            name: message.userDTO?.username || "Anonymous",
-                            avatarUrl: message.userDTO?.avatarUrl || "/default-avatar.webp",
-                        }}
-                        isOwnMessage={message.userId === parseInt(localStorage.getItem("userId"), 10)}
-                        onClick={() => {
-                            setSelectedMessage(message);
-                            setEditedMessage(message.content);
-                        }}
-                    />
-                ))}
-            </div>
+        <div className="chat-messages">
+            {messages.map((message, index) => (
+                <Message
+                    key={message.id || msg-${index}}
+                    content={message.content}
+                    sender={{
+                        name: message.userDTO?.username || "Anonymous",
+                        avatarUrl: message.userDTO?.avatarUrl || "/default-avatar.webp",
+                    }}
+                    isOwnMessage={message.userId === parseInt(localStorage.getItem("userId"), 10)}
+                    onClick={() => {
+                        setSelectedMessage(message);
+                        setEditedMessage(message.content);
+                        setSelectedMessageId(message.id); // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
+                    }}
+                />
+            ))}
+        </div>
 
-            <div className="chat-input">
-                <input
-                    type="text"
-                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
-                    value={newMessage}
-                    onChange={(e) => setNewMessage(e.target.value)}
-                    onKeyDown={(e) => e.key === "Enter" && sendMessage()}
-                />
-                <button onClick={sendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
-            </div>
+        <div className="chat-input">
+            <input
+                type="text"
+                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
+                value={newMessage}
+                onChange={(e) => setNewMessage(e.target.value)}
+                onKeyDown={(e) => e.key === "Enter" && sendMessage()}
+            />
+            <button onClick={sendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
+        </div>
 
-            {selectedMessage && (
-                <div className="message-edit-modal">
-                    <div className="message-edit-content">
-                        <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</h3>
-                        <textarea
-                            value={editedMessage}
-                            onChange={(e) => setEditedMessage(e.target.value)}
-                        />
-                        <button onClick={editMessage}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
-                        <button onClick={deleteMessage}>–£–¥–∞–ª–∏—Ç—å</button>
-                        <button onClick={() => setSelectedMessage(null)}>–û—Ç–º–µ–Ω–∞</button>
-                    </div>
-                </div>
-            )}
-        </div>
-    );
+        {selectedMessage && (
+            <div className="message-edit-modal">
+                <div className="message-edit-content">
+                    <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</h3>
+                    <textarea
+                        value={editedMessage}
+                        onChange={(e) => setEditedMessage(e.target.value)}
+                    />
+                    <button onClick={editMessage}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
+                    <button onClick={deleteMessage}>–£–¥–∞–ª–∏—Ç—å</button>
+                    <button onClick={() => {
+                        setSelectedMessage(null);
+                        setSelectedMessageId(null);
+                    }}>–û—Ç–º–µ–Ω–∞</button>
+                </div>
+            </div>
+        )}
+    </div>
+);
 };
 
-export default ChatContainer;
+export default ChatContainer;
\ No newline at end of file
Index: messenger-ui/src/components/mainLayout/MainLayout.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/messenger-ui/src/components/mainLayout/MainLayout.js b/messenger-ui/src/components/mainLayout/MainLayout.js
--- a/messenger-ui/src/components/mainLayout/MainLayout.js	
+++ b/messenger-ui/src/components/mainLayout/MainLayout.js	(date 1738835841673)
@@ -1,10 +1,10 @@
 import React, { useState } from "react";
 import Sidebar from "./sidebar/Sidebar";
 import ChatContainer from "./chatContainer/ChatContainer";
-import "./MainLayout.css"; // CSS –¥–ª—è –º–∞–∫–µ—Ç–∞
+import "./MainLayout.css";
 
 const MainLayout = () => {
-    const [activeChatId, setActiveChatId] = useState(1); // –•—Ä–∞–Ω–∏–º ID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
+    const [activeChatId, setActiveChatId] = useState(1);
 
     return (
         <div className="main-layout">
